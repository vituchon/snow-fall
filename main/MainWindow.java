/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JToggleButton;

/**
 *
 * @author Administrador
 */
public class MainWindow extends javax.swing.JFrame implements WindowListener {

	private DecoupledGamePanel gamePanel;
	private JLabel labelStats;
	private JPanel panelStats;

	/**
	 * Creates new form MainWindow
	 */
	public MainWindow(int fps, Dimension dimension, int maxParticles) {
		initComponents(fps, dimension, maxParticles);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setTitle("Game");
		setResizable(false);
		pack();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents(int fps, Dimension dimension, int maxParticles) {

		panelStats = new javax.swing.JPanel();
		labelStats = new javax.swing.JLabel();
		gamePanel = new DecoupledGamePanel(fps, dimension, maxParticles);
		gamePanel.setPreferredSize(dimension);
		final JToggleButton jToggleButton = new JToggleButton("Pausar");

		panelStats.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

		labelStats.setText("Estad√≠sticas");

		panelStats.setLayout(new FlowLayout());
		panelStats.add(labelStats);
		panelStats.add(jToggleButton);

		getContentPane().setLayout(new BorderLayout());
		getContentPane().add(panelStats, BorderLayout.NORTH);
		getContentPane().add(gamePanel, BorderLayout.CENTER);

		jToggleButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				boolean selected = jToggleButton.getModel().isSelected();
				if (selected) {
					gamePanel.pauseGame();
					jToggleButton.setText("Resumir");
				} else {
					gamePanel.resumeGame();
					jToggleButton.setText("Pausar");
				}
			}
		});
	}

	@Override
	public void windowActivated(WindowEvent e) {
		gamePanel.resumeGame();
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		gamePanel.pauseGame();
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		gamePanel.resumeGame();
	}

	@Override
	public void windowIconified(WindowEvent e) {
		gamePanel.pauseGame();
	}

	@Override
	public void windowClosing(WindowEvent e) {
		gamePanel.stopGame();
	}

	@Override
	public void windowClosed(WindowEvent e) {
	}

	@Override
	public void windowOpened(WindowEvent e) {
	}
}
